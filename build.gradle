import org.packtrack.utils.purolator.PurolatorTrack
import org.packtrack.utils.fedex.FedexTrack
import org.packtrack.utils.pdf.ReadPdfText

task TrackOnePurolatorShipment {
    doLast {
        PurolatorTrack track = new PurolatorTrack(project.purolatorTrackingNumber)
        track.getStatus()
        track.printFullStatus()
    }
}

task TrackOneFedexShipment {
    doLast {
        FedexTrack track = new FedexTrack(project.fedexTrackingNumber, fedexTrackOuputDir)
        track.getStatus()
        // track.printFullStatus()
    }
}

task TrackPurolatorShipmentsInTextFile {
    doLast {
        List<String> tracked = []
        tracked.add("BOL_MNFST_NUM")
        tracked.add("SHIPMENT_PIN")

        File file = new File(sourceFilename)
        file.eachLine { String line ->
            def match = (line =~ /(?:.*?\t){81}(.*?)\t(.*?)\t/)
            if (match) {
                def packages = [match[0][1].toString(), match[0][2].toString()]
                logger.debug("Found packages: {}", packages)
                packages.each { item -> 
                    if (!tracked.contains(item)) {
                        logger.lifecycle("Package: {}", item)
                        PurolatorTrack track = new PurolatorTrack(item)
                        track.getStatus()
                        track.printShortStatus()
                        tracked.add(item)
                    }
                    else {
                        logger.debug("Package: {} already tracked.\n", item)
                    }
                }
            }
        }
    }
}

task ReadPdfInvoice {
    doLast {
        ReadPdfText pdf = new ReadPdfText(project.sourcePfdFilename)
        logger.lifecycle("Text in {}:\n", project.sourcePfdFilename)
        logger.lifecycle(pdf.text)
    }
}

task GetTrackingNumbersFromInvoice {
    doLast {
        Integer c = 0
        ReadPdfText pdf = new ReadPdfText(project.sourcePfdFilename)
        pdf.getTrackingNumbers().each { shipment ->
            logger.lifecycle("SHIPMENT: {}: {}", ++c, shipment)
        }
    }
}

task TrackFedexShipmentsInPdfFile {
    doLast {
        Integer c = 0
        ReadPdfText pdf = new ReadPdfText(project.sourcePfdFilename)
        pdf.getTrackingNumbers().each { shipment ->
            logger.lifecycle("\nFOUND SHIPMENT: {}: {}", ++c, shipment)
            FedexTrack track = new FedexTrack(shipment, fedexTrackOuputDir)
            track.getStatus()
        }
    }
}